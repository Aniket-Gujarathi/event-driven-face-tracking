diff --git a/spinn_front_end_common/utility_models/reverse_ip_tag_multicast_source_machine_vertex.py b/spinn_front_end_common/utility_models/reverse_ip_tag_multicast_source_machine_vertex.py
index c8493db..4fc5a74 100644
--- a/spinn_front_end_common/utility_models/reverse_ip_tag_multicast_source_machine_vertex.py
+++ b/spinn_front_end_common/utility_models/reverse_ip_tag_multicast_source_machine_vertex.py
@@ -257,7 +257,7 @@ class ReverseIPTagMulticastSourceMachineVertex(
         self._mask, max_key = self._calculate_mask(n_keys)
 
         # Check that the number of keys and the virtual key don't interfere
-        if n_keys > max_key:
+        if n_keys > max_key+1:
             raise ConfigurationException(
                 "The mask calculated from the number of keys will not work "
                 "with the virtual key specified")
@@ -613,9 +613,9 @@ class ReverseIPTagMulticastSourceMachineVertex(
     @overrides(AbstractProvidesOutgoingPartitionConstraints.
                get_outgoing_partition_constraints)
     def get_outgoing_partition_constraints(self, partition):  # @UnusedVariable
-        if self._virtual_key is not None:
-            return list([FixedKeyAndMaskConstraint(
-                [BaseKeyAndMask(self._virtual_key, self._mask)])])
+#        if self._virtual_key is not None:
+#            return list([FixedKeyAndMaskConstraint(
+#                [BaseKeyAndMask(self._virtual_key, self._mask)])])
         return list()
 
     @property
